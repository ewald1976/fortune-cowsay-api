name: CI ‚Äì Build & Test Lumen Fortune API

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      # üß± Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v4

      # üê≥ Docker-Setup
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # üî® Build Docker-Image
      - name: Build image
        run: docker build -t fortune-cowsay-api:latest .

      # üöÄ Start Container im Hintergrund
      - name: Run container
        run: docker run -d -p 8080:8080 --name fortune-api fortune-cowsay-api:latest

      # üïê Warten bis der Server l√§uft
      - name: Wait for container
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:8080 > /dev/null; then
              echo "Container ready"
              exit 0
            fi
            echo "Waiting..."
            sleep 3
          done
          echo "Container did not start in time"
          exit 1

      # ‚úÖ Test API Endpoint
      - name: Test fortune endpoint
        run: |
          curl -s http://localhost:8080/api/fortune | grep -q '"type":"fortune"' && echo "‚úÖ OK" || (echo "‚ùå Test failed" && exit 1)

      # üßπ Stop + Cleanup
      - name: Stop container
        if: always()
        run: docker rm -f fortune-api || true

  # optional: Push zu GitHub Container Registry (ghcr.io)
  push-image:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

