name: Build, Test & Publish Docker Image

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'      # üëà reagiert auf Tags wie v1.0.0
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (no push yet)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          load: true     # l√§dt lokal statt push
          tags: fortune-cowsay-api:test

      - name: Run container for tests
        run: |
          docker run -d --rm -p 8080:8080 --name fortune-api-test fortune-cowsay-api:test
          echo "Waiting for container to start..."
          for i in {1..10}; do
            if curl -fs http://localhost:8080/api/health >/dev/null 2>&1; then
              echo "‚úÖ API is healthy!"
              exit 0
            fi
            sleep 3
          done
          echo "‚ùå API healthcheck failed" && docker logs fortune-api-test && exit 1

      - name: Stop test container
        if: always()
        run: docker stop fortune-api-test || true

  push-to-dockerhub:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/fortune-cowsay-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/fortune-cowsay-api:${{ github.ref_name }}

  release:
    needs: push-to-dockerhub
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

